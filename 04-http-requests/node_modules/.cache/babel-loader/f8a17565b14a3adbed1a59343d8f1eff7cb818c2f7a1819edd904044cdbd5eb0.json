{"ast":null,"code":"var _jsxFileName = \"/Users/matiashamie/Desktop/Courses/react/04-http-requests/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-7b2cb-default-rtdb.firebaseio.com/movies.json\"); // recordar que firebase pide el url.json\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].opening_crawl,\n          releaseDate: data[key].release_date\n        });\n      }\n      const transformedMovies = data(movie => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n          title: movie.title\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  const addMovieHandler = async movie => {\n    const response = await fetch(\"https://react-http-7b2cb-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) content = /*#__PURE__*/_jsxDEV(MoviesList, {\n    movies: movies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 36\n  }, this);\n  if (error) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 24\n  }, this);\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","opening_crawl","releaseDate","release_date","transformedMovies","movie","episode_id","message","addMovieHandler","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["/Users/matiashamie/Desktop/Courses/react/04-http-requests/src/App.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        \"https://react-http-7b2cb-default-rtdb.firebaseio.com/movies.json\"\n      ); // recordar que firebase pide el url.json\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].opening_crawl,\n          releaseDate: data[key].release_date,\n        });\n      }\n      const transformedMovies = data((movie) => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n          title: movie.title,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  const addMovieHandler = async (movie) => {\n    const response = await fetch(\n      \"https://react-http-7b2cb-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n  };\n\n  let content = <p>Found no movies.</p>;\n  if (movies.length > 0) content = <MoviesList movies={movies} />;\n  if (error) content = <p>{error}</p>;\n  if (isLoading) content = <p>Loading...</p>;\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}